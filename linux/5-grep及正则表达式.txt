grep及正则表达式

egrep, fgrep
grep:根据模式，搜索文本，并将符合模式的文本行显示出来。
	Pattern：文本字符和正则表达式的元字符给成而成匹配条件
	grep [options] PATTERN [FILE...]
	参数：
		-i(--ignore-cas)：在匹配的时候忽略大小写
		--colour：--color=[WHEN]  把匹配到的串用不同颜色显示出来
		-v：反向查找，不可以被模式匹配到的行显示出来
		-o：只显示被模式匹配到的字符串
		-E：使用扩展正则表达式
		-A：不但显示匹配到的行，还显示行后面的多少行。后面通常跟数值，每组之间用--隔开
		-B：不但显示匹配到的行，还显示持前面的多少行。后面通常跟数值，每组之间用--隔开
		-C：不但显示匹配到的行，还显示持前后的多少行。后面通常跟数值，每组之间用--隔开
	用法：
		grep 'root' /etc/passwd  把/etc/passwd下包含root的行显示出来
		grep --color 'root' /etc/passwd  把/etc/passwd下包含root的行显示出来，并把root以高亮颜色显示
		grep -v 'root' /etc/passwd 显示没有被模式匹配到的
	正则表达式：Ragular EXPression REGEXP
		元字符：
			.：匹配任意单个字符
			[]：匹配指定范围内的任意单个字符，以下所有引用时要用[]引用起来
				[:digit:]：数字
				[:lower:]：小写字符
				[:upper:]：大写字母
				[:punct:]：标点符号
				[:space:]：空白字符
				[:alpha:]：所有字母
				[:alnum:]：所有数字与字母
			[^]：匹配指定范围外的任意单个字符
		匹配次数：
			*：匹配其前面的字符任意次
			.*：表示任意长度的任意字符
			\?：匹配前面的字符1次或0次
			\{m,n\}：匹配前面的字符至少m次，至多n次
				\{1,\}至少1次
				\{0,3\}最多3次
		位置锚定：
			^：锚定行首，此字符后面的任意内容必须出现在行首
			$：锚定行尾，此字符前面的内容必须出现在行尾
			^$：空白行
			\<或\b：锚定词首，其后面的字符必须作为单词首部出现
			\>或\b：锚定词尾，其前面的任意字符必须做为单词的尾部出现
				\<root\>精确找root这个单词也可以用
		分组：
			\(\)：主要用于在后面继续引用前面匹配到的内容即
				\(ab\)：ab可以出现0次或者多次
				后向引用
				\1：引用第一个左括号以及与之对应的右括号所包含的所有内容
				\2：引用第二个左括号以及与之对应的右括号所包含的所有内容
	用法：
		grep 'r..t' /etc/passwd 包含以r开头中间匹配任意两个字符然后以t结尾的行
		grep 'a\?b' /etc/passwd
		grep 'a\{1,3\}' /etc/passwd
		grep '^r..t' /etc/passwd  以r开头中间两个字符然后跟t的字符必须在行首
		grep 'y$' /etc/passwd 以y结束的行
		grep '^$' /etc/passwd | wc -l 统计空白行
		grep '[[:digit:]]$' /etc/inittab 以数字结尾的行
		grep '[[:space:]][[:digit:]]$' /etc/inittab 以空格与数字结尾的行
		grep '\(ab\)*' test.txt
		grep '\(l..e\).*\1' text3.txt
		grep '\([0-9]\).*\1$' /etc/inittab 行中出现任意数字并且此行以此数字结尾
		grep -A 2 '^core id' /proc/cpuinfo 显示以core id开头，并向下显示两行
	默认情况下正则表达式工作在贪婪模式下，尽可能长的去匹配

正则表达式：
	Baseic REGEXP  基本正则表达式
	Extended REGEXP   扩展正则表达式

grep：使用基本正则表达式定义的模式来过滤文本的命令

扩展正则表达式：
	字符匹配：
		.
		[]
		[^]
	次数匹配：
		*：其前字符任意次
		?：其前字符0次或1次
		+：表式其前字符至少1次
		{m,n}：匹配前面的字符至少m次，至多n次
	位置锚定：
		^
		$
		\<或\b
		\>或\b
	分组：
		()：分组，不需加\
			\1, \2, \3
		|：支持a|b表示a or b的意思
	用法：
		grep --color -E 'C|cat' test6.txt
		grep --color -E '^[[:space:]]+' /etc/grub/grub.conf  匹配以至少一个空格开头的行

grep,egrep很消耗资源

fgrep是快速搜索，但不支持正则表达式

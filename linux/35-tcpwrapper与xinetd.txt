ldd `which APPNAME` | grep libwrap   #查看应用程序是否接受tcp wrapper访问控制(是否有libwrap.so.0 => /lib64/libwrap.so.0这项)，这种方式是动态链接库

静态编译(程序把所有的依赖库在编译里成为程序的一部分)
strings `which portmap` | grep hosts   #静态编译程序查看是否接受tcpwrap访问控制，看里面是否有/etc/hosts.allow与/etc/hosts.deny两个文件


tcp wrapper
 /etc/hosts.allow
 /etc/hosts.deny
tcp wrapper根据以上两个文件去控制访问的
里面写的是服务可执行程序的二进制程序文件的名字
内容例子：
sshd: 192.168.1.   #允许192.168.1这个网段的用户可以访问sshd服务
vsftpd,sshd,in.telnetd:  #可以同时写几个服务
ALL  #本机上所有接受tcpwapper控制的服务
damemon@hosts


linux服务有两类
 standalone：独立守护进程
  服务自我进行管理
 transient：非独立守护进程
  依赖于超级守护进程代为管理的


yum install telnet-server   #telnet-server是接受xinetd管理的一个服务，依赖于xinetd
ldd `which xinetd`   #查看xinetd是否接受tcp wrapper控制，xinetd是telnet服务的代理


tcp wrapper
sshd仅允许172.16.0.16网段访问

方法：
1、/etc/hosts.allow
sshd: 172.16.

2、/etc/hosts.deny
sshd: ALL


telnet服务不允许172.16.0.0/16，但允许172.16.100.200访问；其他客户端不做控制

方法1：
1、/etc/hosts.allow
in.telnetd: 172.16.100.200

2、/etc/hosts.deny
in.telnetd: 172.16.


方法2：
/etc/hosts.deny
in.telnetd: 172.16. EXCEPT 172.16.100.200


方法3：
/etc/hosts.allow
in.telnetd: ALL EXCEPT 172.16. EXCEPT 172.16.100.200

/etc/hosts.deny
in.telnetd：ALL


chkconfig telnet on   #启动telnet服务
service xinetd start  #启动xinetd服务也就是telnet的代理服务



/etc/hosts.allow与/etc/hosts.deny是保存之后立即生效的


不允许172.16这个网段访问telnet
/etc/hosts.allow
in.telnetd: 172.16. :DENY


当172.16网段访问telnet时记录一下日志,并带时间
/etc/hosts.allow
in.telnetd: 172.16. :spawn echo "somebody entered, `data`" >> /var/log/tcpwrapper.log
・data・表示打印data命令的执行结果


tcp wrapper macro:
%c: client infomation(以user@host的方式)
%s: service info(以server@host)
%h: client hostname
%p: server PID
以上的macro都可以用  man 5 hosts_access来获取更多的信息


当172.16网段访问telnet时记录一下日志,要记录时间，客户端服务器端
/etc/hosts.allow
in.telnetd: 172.16. :spawn echo "`date`, Login attempt from %c to %s" >> /var/log/tcpwrapper.log
/etc/hosts.deny
in.telnetd: ALL :spawn echo "`data`, Login attempt from %h" >> /var/log/tcpwrapper.log



SYSLOG：专门用于记录日志的服务(有两个进程syslogd, klogd)
可以直接man xinetd.conf来找配置文件的说明


xinetd：可以管理n个非独立进程
 /etc/xinetd.conf：主配置文件
 /etc/xinetd.d/*：这里所有的文件都是主配置文件的组成部分

主配置文件主要有两部分组成
 全局配置(服务的默认配置)
  enabled =
  disabled =    #以上两个都是是否启用服务
  log_type        = SYSLOG daemon info   #日志类型一种是SYSLOG
  #log_type = File /var/log/tcpwrapper  #也可以以这种方式记录日志
  log_on_failure  = HOST   #当失败时记录主机信息
  log_on_success  = PID HOST DURATION EXIT    #当成功时记录的信息
 服务配置
  service <service_name>
  {
    <attribute><assign_op><value><value>
  }

当禁一个服务里用户的是xinetd服务
非独立守护进程是没有级别的
在/etc/xinetd.d下的服务名一般跟文件名保持一致，/etc/xinetd.d/telnet内容如下
service telnet
{
        disable = no  #是否启用
        flags           = REUSE  #标志
        socket_type     = stream  #套接字类型，一般有三种TCP(stream), UDP(dgram), RPC
        wait            = no   #当一个用户进来，后面的用户是否要等待,udp协议是无法等待，tcp根据需要
        user            = root   #以那个用户的身份去启动
        server          = /usr/sbin/in.telnetd   #服务的应用程序
        log_on_failure  += USERID   #失败时记录的日志信息格式+=的意思是在默认值的基础上再增加一个选项，-=表是在默认值中去掉一个选项。通常默认记录日志是在/var/log/message
}


xinetd.d的访问控制
only_from =   #仅允许那些主机的访问
 IP: 172.16.100.200  #只允许一个IP访问
 NETWORK：172.16.0.0/16, 172.16.0.0/255.255.255.0
 HOSTNAME: FQDN
 DOAMIN:.f273c.com
no_access =   #禁止那些主机访问，跟only_from一样 一般不一块儿用
#时间控制
access_time =hh:mm-hh:mm   #时间访问控制
#设置提供服务的地址
bind = 172.168.1.149   #当服务器上多个ip时，设置服务监听在那个地址上
interface = 172.168.1.149  #跟bind是一样的
#资源访问控制
cps =   #每秒钟可以接受多少个连接数可以接受两个值，第一个参数定义每秒名可以接受的连接个数，第二个参数表示当达到第一个值时服务关闭多少秒
 例子：cps = 1 10 #每秒钟可以接受1个连接，当达到1个时，第二个进来要等待10秒
per_source =   #用于定义指定一个Ip允许同时发起几个请求连接请求
instance =   #用于定义最大服务连接数
server_args =   #向启动服务传递参数
banner =    #定义一个文件，把里面的内容在登录时显示出来，里面还会显示/etc/issue文件里信息或者/etc/issue.net
port =    #定义端口，如果没有就用默认的，即约定俗成的端口


portmap提供rcp服务，nfs是调用rpc服务

